import re

# Simulated user database as a dictionary (replace this with your actual user database)
user_database = {
    "user1@example.com": {},
    "user2@example.com": {},
    "hamdanzd@mail.uc.edu": {},
    "zeidhamdan223@gmail.com": {},
    "zeidhamdan76@gmail.com": {},
    "leganiir@mail.uc.edu": {}
}

# Database for banks
bank_database = {
    "nationalsales@syf.com": {},
    "fifththirdbank@53.com": {},
    "international@huntington.com": {},
    "loanservicing@usavingsbank.com": {},
    # Add more banks here (make sure email addresses are lowercase)
}

# Database for payment companies
payment_database = {
    "abuse@visa.com": {},
    "stripe.com": {},
    # Add more payment companies here (make sure email addresses are lowercase)
}

# Database for Fortune 500 companies
fortune_500_database = {
    "service@walmartcontacts.com": {},
    "msft@microsoft.com": {},
    # Add more Fortune 500 companies here (make sure email addresses are lowercase)
}

# Database for insurance companies
insurance_database = {
    "insuranceco1.com": {},
    "insuranceco2.com": {},
    # Add more insurance companies here (make sure email addresses are lowercase)
}

# Database for online shops
online_shop_database = {
    "shop1.com": {},
    "shop2.com": {},
    # Add more online shops here (make sure email addresses are lowercase)
}

def split_email(email):
    # Strip leading and trailing spaces from the email
    email = email.strip()

    # Define a regular expression pattern to match an email address
    email_pattern = r'^([a-zA-Z0-9._%+-]+)@([a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$'

    # Use re.match to find the parts of the email address
    match = re.match(email_pattern, email)

    if match:
        username, domain = match.groups()
        return username, domain
    else:
        return None, None

def classify_email(email, blacklist):
    try:
        username, domain = split_email(email)

        if username and domain:
            # Make the comparison case-insensitive
            lowercase_email = (username + "@" + domain).lower()

            if lowercase_email in user_database:
                return "Legit email", username, domain
            elif domain in blacklist:
                return "Blacklisted email", username, domain
            elif lowercase_email in bank_database:
                return "Bank email", username, domain
            elif lowercase_email in payment_database:
                return "Payment company email", username, domain
            elif lowercase_email in fortune_500_database:
                return "Fortune 500 company email", username, domain
            elif lowercase_email in insurance_database:
                return "Insurance company email", username, domain
            elif lowercase_email in online_shop_database:
                return "Online shop email", username, domain
            else:
                return "Invalid email", username, domain
    except Exception as e:
        return "Error:", str(e)

# Define the blacklist outside the classify_email function
blacklist = ["wermink.com", "beaconmessenger.com", "lyft.live", "socam.me", "tutuapp.bid", "yogrow.co", "afia.pro", "clout.wiki",
             "hexi.pics", "wisnick.com", "weirby.com", "scubalm.com", "fleos.com", "sedo.com"]

# Allow user input
while True:
    email = input("Enter an email address (or type 'exit' to quit): ")
    
    if email.lower() == "exit":
        break
    
    classification, username, domain = classify_email(email, blacklist)
    
    if classification == "Legit email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
    elif classification == "Blacklisted email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
        print("The email domain is blacklisted.")
    elif classification == "Bank email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
        print("This email is associated with a bank.")
    elif classification == "Payment company email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
        print("This email is associated with a payment company.")
    elif classification == "Fortune 500 company email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
        print("This email is associated with a Fortune 500 company.")
    elif classification == "Insurance company email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
        print("This email is associated with an insurance company.")
    elif classification == "Online shop email":
        print(f"Classification: {classification}")
        print(f"Username: {username}")
        print(f"Domain: {domain}")
        print("This email is associated with an online shop.")
    else:
        print(f"Classification: {classification}")
